import React from 'react';
import {
  Paper,
  Grid,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  TextField,
  Box,
  Chip,
  IconButton,
  Tooltip
} from '@mui/material';
import {
  Clear as ClearIcon,
  FilterList as FilterListIcon
} from '@mui/icons-material';

const VulnerabilityFilters = ({
  filters,
  onFilterChange,
  onFilterClear,
  severityOptions,
  categoryOptions,
  statusOptions,
  projectOptions = [], // New prop for project options
  showProjectFilter = false // New prop to control project filter visibility
}) => {
  const handleChange = (field) => (event) => {
    onFilterChange({
      ...filters,
      [field]: event.target.value
    });
  };

  const handleClearFilters = () => {
    onFilterClear();
  };

  // Count active filters
  const activeFilterCount = Object.values(filters).filter(value => value !== '').length;

  return (
    <Paper elevation={2} sx={{ p: 2, mb: 2 }}>
      <Box display="flex" justifyContent="space-between" alignItems="center" mb={2}>
        <Box display="flex" alignItems="center">
          <FilterListIcon sx={{ mr: 1 }} />
          <Box component="span" mr={1}>Filters</Box>
          {activeFilterCount > 0 && (
            <Chip 
              size="small" 
              label={`${activeFilterCount} active`}
              color="primary"
            />
          )}
        </Box>
        {activeFilterCount > 0 && (
          <Tooltip title="Clear all filters">
            <IconButton size="small" onClick={handleClearFilters}>
              <ClearIcon />
            </IconButton>
          </Tooltip>
        )}
      </Box>
      <Grid container spacing={2}>
        {showProjectFilter && (
          <Grid item xs={12} sm={6} md={3}>
            <FormControl fullWidth size="small">
              <InputLabel>Project</InputLabel>
              <Select
                value={filters.projectId || ''}
                label="Project"
                onChange={handleChange('projectId')}
              >
                <MenuItem value="">All Projects</MenuItem>
                {projectOptions.map(project => (
                  <MenuItem key={project._id} value={project._id}>
                    {project.name}
                  </MenuItem>
                ))}
              </Select>
            </FormControl>
          </Grid>
        )}
        <Grid item xs={12} sm={6} md={showProjectFilter ? 2 : 3}>
          <FormControl fullWidth size="small">
            <InputLabel>Severity</InputLabel>
            <Select
              value={filters.severity || ''}
              label="Severity"
              onChange={handleChange('severity')}
            >
              <MenuItem value="">All</MenuItem>
              {severityOptions.map(severity => (
                <MenuItem key={severity} value={severity}>
                  {severity.charAt(0).toUpperCase() + severity.slice(1)}
                </MenuItem>
              ))}
            </Select>
          </FormControl>
        </Grid>
        <Grid item xs={12} sm={6} md={showProjectFilter ? 2 : 3}>
          <FormControl fullWidth size="small">
            <InputLabel>Category</InputLabel>
            <Select
              value={filters.category || ''}
              label="Category"
              onChange={handleChange('category')}
            >
              <MenuItem value="">All</MenuItem>
              {categoryOptions.map(category => (
                <MenuItem key={category} value={category}>
                  {category}
                </MenuItem>
              ))}
            </Select>
          </FormControl>
        </Grid>
        <Grid item xs={12} sm={6} md={showProjectFilter ? 2 : 3}>
          <FormControl fullWidth size="small">
            <InputLabel>Status</InputLabel>
            <Select
              value={filters.status || ''}
              label="Status"
              onChange={handleChange('status')}
            >
              <MenuItem value="">All</MenuItem>
              {statusOptions.map(status => (
                <MenuItem key={status} value={status}>
                  {status.charAt(0).toUpperCase() + status.slice(1)}
                </MenuItem>
              ))}
            </Select>
          </FormControl>
        </Grid>
        <Grid item xs={12} sm={6} md={showProjectFilter ? 3 : 3}>
          <TextField
            fullWidth
            size="small"
            label="Search"
            value={filters.search || ''}
            onChange={handleChange('search')}
            placeholder="Search description..."
          />
        </Grid>
      </Grid>
    </Paper>
  );
};

export default VulnerabilityFilters;